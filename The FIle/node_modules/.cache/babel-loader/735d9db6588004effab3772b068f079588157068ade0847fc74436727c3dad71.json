{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus vivobook\\\\BNCCProject3-main\\\\The FIle\\\\src\\\\context\\\\CountryContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CountryContext = /*#__PURE__*/createContext();\nexport const CountryProvider = ({\n  children\n}) => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        const response = await fetch(\"https://restcountries.com/v3.1/all\");\n        const data = await response.json();\n        setCountries(data);\n      } catch (error) {\n        console.error(\"Error fetching country data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCountries();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CountryContext.Provider, {\n    value: {\n      countries,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(CountryProvider, \"frTrcJTr6nl3EAerHbdpuWDmYhg=\");\n_c = CountryProvider;\nvar _c;\n$RefreshReg$(_c, \"CountryProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","CountryContext","CountryProvider","children","_s","countries","setCountries","loading","setLoading","fetchCountries","response","fetch","data","json","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/asus vivobook/BNCCProject3-main/The FIle/src/context/CountryContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nexport const CountryContext = createContext();\n\nexport const CountryProvider = ({ children }) => {\n    const [countries, setCountries] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchCountries = async () => {\n            try {\n                const response = await fetch(\"https://restcountries.com/v3.1/all\");\n                const data = await response.json();\n                setCountries(data);\n            } catch (error) {\n                console.error(\"Error fetching country data:\", error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchCountries();\n    }, []);\n\n    return (\n        <CountryContext.Provider value={{ countries, loading }}>\n            {children}\n        </CountryContext.Provider>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,cAAc,gBAAGL,aAAa,CAAC,CAAC;AAE7C,OAAO,MAAMM,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;QAClE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCP,YAAY,CAACM,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD,CAAC,SAAS;QACNN,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDC,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA,CAACC,cAAc,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEZ,SAAS;MAAEE;IAAQ,CAAE;IAAAJ,QAAA,EAClDA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAElC,CAAC;AAACjB,EAAA,CAzBWF,eAAe;AAAAoB,EAAA,GAAfpB,eAAe;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}